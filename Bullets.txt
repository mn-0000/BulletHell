#include <stdio.h>
#include <sys/types.h>      /* needed to use pid_t, etc. */
#include <sys/wait.h>       /* needed to use wait() */
#include <stdlib.h>
#include <unistd.h>         /* LINUX constants and functions (fork(), etc.) */


int main (void){

    printf("Enter 2 ints; ");
    int num1;
    int num2;

    scanf("%d %d", &num1, &num2);
    if (num1 == num2){
        printf("%d is equal to %d \n", num1, num2);
    }
    if ( num1 != num2 ) { printf( "%d is not equal to %d\n", num1, num2 ); }
    // end if
     if ( num1 < num2 ) { printf( "%d is less than %d\n", num1, num2 ); } // end if
     if ( num1 > num2 ) { printf( "%d is greater than %d\n", num1, num2 ); } // end if
     if ( num1 <= num2 ) { printf( "%d is less than or equal to %d\n", num1, num2 ); } // end if
     if ( num1 >= num2 ) { printf( "%d is greater than or equal to %d\n", num1, num2 ); } // end if

    enum{RD, WR};
    int n, fd[2];

    pid_t pid;
    char buf[100];

    if (pipe(fd)<0)
        perror("Pipe error");


    else if ((pid = fork())<0)
        perror("fork perror");


    else if (pid == 0){
        close(fd[WR]);
        n = read(fd[RD], buf, 100);
        write(STDOUT_FILENO, buf, n);
        execlp("/bin/ls","ls",(char *) 0);

    }

    else{
        close(fd[RD]);
        write(fd[WR], "Hello there ", 15);
        wait(NULL);
        execlp("/bin/ls","ls",(char *) 0);

    }
}